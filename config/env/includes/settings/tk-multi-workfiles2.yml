# Copyright (c) 2017 Shotgun Software Inc.
#
# CONFIDENTIAL AND PROPRIETARY
#
# This work is provided "AS IS" and subject to the Shotgun Pipeline Toolkit
# Source Code License included in this distribution package. See LICENSE.
# By accessing, using, copying or modifying this work you indicate your
# agreement to the Shotgun Pipeline Toolkit Source Code License. All rights
# not expressly granted therein are reserved by Shotgun Software Inc.

# Author: Diego Garcia Huerta
# Contact: https://www.linkedin.com/in/diegogh/
#
# YOU SHOULD MERGE these entries into your settings file, as
# THIS FILE BY ITSELF WILL NOT WORK 
# These are the additions to get the engine up and running with the 
# default tk-apps for this environment


################################################################################

# -- harmony

settings.tk-multi-workfiles2.harmony.project:
  allow_task_creation: true
  create_new_task_hook: "{self}/create_new_task.py"
  custom_actions_hook: "{self}/custom_actions.py"
  entities:
  - caption: Assets
    entity_type: Task
    filters:
    - [entity, type_is, Asset]
    hierarchy: [entity.Asset.sg_asset_type, entity, step, content]
  - caption: Sequences
    entity_type: Task
    filters:
    - [entity, type_is, Sequence]
    hierarchy: [entity, step, content]
  - caption: Shots
    entity_type: Task
    filters:
    - [entity, type_is, Shot]
    hierarchy: [entity.Shot.sg_sequence, entity, step, content]
  file_extensions: []
  hook_copy_file: "{engine}/tk-multi-workfiles2/copy_file.py"
  hook_filter_publishes: default
  hook_filter_work_files: default
  hook_scene_operation: "{engine}/tk-multi-workfiles2/scene_operation_tk-harmony.py"
  launch_at_startup: false
  my_tasks_extra_display_fields: []
  saveas_default_name: scene
  saveas_prefer_version_up: false
  show_my_tasks: true
  template_publish:
  template_publish_area:
  template_work:
  template_work_area:
  version_compare_ignore_fields: []
  location: "@apps.tk-multi-workfiles2.location"


# asset_step
settings.tk-multi-workfiles2.harmony.asset_step:
  entities:
  - caption: Assets
    entity_type: Task
    filters:
    - [entity, type_is, Asset]
    hierarchy: [entity.Asset.sg_asset_type, entity, step, content]
  - caption: Sequences
    entity_type: Task
    filters:
    - [entity, type_is, Sequence]
    hierarchy: [entity, step, content]
  - caption: Shots
    entity_type: Task
    filters:
    - [entity, type_is, Shot]
    hierarchy: [entity.Shot.sg_sequence, entity, step, content]
  hook_scene_operation: "{engine}/tk-multi-workfiles2/scene_operation_tk-harmony.py"
  hook_copy_file: "{engine}/tk-multi-workfiles2/copy_file.py"
  template_publish: harmony_asset_publish
  template_publish_area: asset_publish_area_harmony
  template_work: harmony_asset_work
  template_work_area: asset_work_area_harmony
  # here you can specify your own template project for when "new file" is 
  # pressed in the workfiles interface. Make sure you name the project "template"
  # template_project_folder: "C:/pipeline/config/templates/harmony/newfile/template.xstage"
  location: "@apps.tk-multi-workfiles2.location"


# shot_step
settings.tk-multi-workfiles2.harmony.shot_step:
  entities:
  - caption: Assets
    entity_type: Task
    filters:
    - [entity, type_is, Asset]
    hierarchy: [entity.Asset.sg_asset_type, entity, step, content]
  - caption: Sequences
    entity_type: Task
    filters:
    - [entity, type_is, Sequence]
    hierarchy: [entity, step, content]
  - caption: Shots
    entity_type: Task
    filters:
    - [entity, type_is, Shot]
    hierarchy: [entity.Shot.sg_sequence, entity, step, content]
  hook_scene_operation: "{engine}/tk-multi-workfiles2/scene_operation_tk-harmony.py"
  hook_copy_file: "{engine}/tk-multi-workfiles2/copy_file.py"
  template_publish: harmony_shot_publish
  template_publish_area: shot_publish_area_harmony
  template_work: harmony_shot_work
  template_work_area: shot_work_area_harmony
  # here you can specify your own template project for when "new file" is 
  # pressed in the workfiles interface. Make sure you name the project "template"
  # template_project_folder: "C:/pipeline/config/templates/harmony/newfile/template.xstage"
  location: "@apps.tk-multi-workfiles2.location"


# sequence_step
settings.tk-multi-workfiles2.harmony.sequence_step:
  entities:
  - caption: Assets
    entity_type: Task
    filters:
    - [entity, type_is, Asset]
    hierarchy: [entity.Asset.sg_asset_type, entity, step, content]
  - caption: Sequences
    entity_type: Task
    filters:
    - [entity, type_is, Sequence]
    hierarchy: [entity, step, content]
  - caption: Shots
    entity_type: Task
    filters:
    - [entity, type_is, Shot]
    hierarchy: [entity.Shot.sg_sequence, entity, step, content]
  hook_scene_operation: "{engine}/tk-multi-workfiles2/scene_operation_tk-harmony.py"
  hook_copy_file: "{engine}/tk-multi-workfiles2/copy_file.py"
  template_publish: harmony_sequence_publish
  template_publish_area: sequence_publish_area_harmony
  template_work: harmony_sequence_work
  template_work_area: sequence_work_area_harmony
  # here you can specify your own template project for when "new file" is 
  # pressed in the workfiles interface. Make sure you name the project "template"
  # template_project_folder: "C:/pipeline/config/templates/harmony/newfile/template.xstage"
  location: "@apps.tk-multi-workfiles2.location"